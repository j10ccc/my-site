---
import BaseLayout from "@layouts/BaseLayout.astro";
import "@fontsource/ibm-plex-sans/500.css";
import "@fontsource/ibm-plex-sans/400.css";
import { getCollection } from "astro:content";
import { useTranslations } from "@hooks/i18n/useTranslations";
import Social from "@components/Social.astro";
import type { Languages } from "@types/i18n";

export interface Props {
  lang: Languages;
}

export async function getStaticPaths() {
  return [
    { params: { lang: "zh-cn" }, props: { lang: "zh-cn" } },
    { params: { lang: "en" }, props: { lang: "en" } },
  ];
}

const { lang } = Astro.props;

const postSlice = (await getCollection("blog"))
  .map((page) => {
    const [_, ...slug] = page.slug.split("/");
    return {
      meta: page.data,
      url: `blog/${slug.join("/")}`,
    };
  })
  .sort(
    (a, b) =>
      new Date(b.meta.pubDate).getTime() - new Date(a.meta.pubDate).getTime()
  )
  .slice(0, 5);

const projectSlice: any[] = [];

const t = useTranslations(lang);

---

<BaseLayout lang={lang}>
  <div class="hero">
    <h1>Hello,</h1>
    <h1>I'm {t("identify.name")}.</h1>
    <div class="tags">
      <p>{ t("identify.introduction") }</p>
      <p>{ t("identify.occupation") }</p>
      <p>{ t("identify.hobby") }</p>
    </div>
    <Social lang={lang} />
  </div>

  { projectSlice.length !== 0 && (
    <section class="showcase">
      <h2>Pinned Projects</h2>
      <div class="grid" />
    </section>
  )
  }

  { postSlice.length !== 0 && (
    <section class="showcase">
      <a href="blog">
        <h2>Latest Posts</h2>
      </a>
      <div class="grid">
        {postSlice.map((post) => (
          <a href={post.url}>
            <div class="item">
              <span class="title">{post.meta.title}</span>
              <span class="date">
                {new Date(post.meta.pubDate).toLocaleDateString(lang)}
              </span>
            </div>
          </a>
        ))}
      </div>
    </section>
  )
  }
</BaseLayout>

<style lang="less">
h1, h2, p, a {
  font-family: "IBM Plex Sans", sans-serif;
}
.hero {
  margin-top: 24px;
  h1 {
    margin: 0;
  }
  .tags {
    margin-top: 16px;
    p {
      margin: 4px 0;
    }
  }
}
.showcase {
  h2 {
    margin-top: 32px;
    margin-bottom: 12px;
    transition: 0.3s all;
    border-radius: 4px;
    &:hover {
      background-color: var(--stone-red-1);
    }
  }
  a {
    text-decoration: none;
    color: #000;
  }
  .grid {
    display: grid;
    grid-template-columns: 1fr;
    margin: 0 4px;
    gap: 12px;
    a {
      color: var(--stone-font-black);
      font-weight: 500;
      .item {
        display: flex;
        justify-content: space-between;
        padding: 4px 0;
        border-radius: 4px;
        transition: 0.3s all;
        &:hover {
          background-color: var(--stone-red-1);
        }
        .date {
          opacity: 0.6;
        }
      }
    }
  }
}
</style>
