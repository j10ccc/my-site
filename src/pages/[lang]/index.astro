---
import BaseLayout from "@layouts/BaseLayout.astro";
import { useTranslations } from "@hooks/i18n/useTranslations";
import Social from "@components/Social.astro";
import type { Languages } from "@interfaces/i18n";
import Footer from "@components/Footer.astro";
import { getLanguageCollections, getPostsWithLanguage } from "@utils/languageCollection";
import PostLanguageLink from "@components/PostLanguageLink.astro";

export interface Props {
  lang: Languages;
}

export async function getStaticPaths() {
  return [
    { params: { lang: "zh-cn" }, props: { lang: "zh-cn" } },
    { params: { lang: "en" }, props: { lang: "en" } },
  ];
}

const { lang } = Astro.props;

const collectionSlice = (await getLanguageCollections())
  .sort((a, b) => {
    let postA = a.posts[lang] || Object.entries(a.posts)[0][1];
    let postB = b.posts[lang] || Object.entries(b.posts)[0][1];
    return new Date(postB.meta.pubDate).getTime() - new Date(postA.meta.pubDate).getTime()
  })
  .slice(0, 5);

const withLanguage = getPostsWithLanguage(collectionSlice, lang);

const projectSlice: any[] = [];

const t = useTranslations(lang);
---

<BaseLayout lang={lang}>
  <div class="hero">
    <h1>Hello,</h1>
    <h1>I'm {t("identify.name")}.</h1>
    <div class="tags">
      <p>{ t("identify.introduction") }</p>
      <p>{ t("identify.occupation") }</p>
      <p>{ t("identify.hobby") }</p>
    </div>
    <Social lang={lang} />
  </div>

  { projectSlice.length !== 0 && (
    <section class="showcase">
      <h2>Pinned Projects</h2>
      <div class="grid" />
    </section>
  )}

  { withLanguage.length !== 0 && (
    <section class="showcase">
      <a href="blog">
        <h2>Latest Posts</h2>
      </a>
      <div class="grid">
        {withLanguage.map((item) => (
          <div class="item">
            <a class="title" href={`blog/${item.post.url}`}>{item.post.meta.title}</a>
            <PostLanguageLink locale={lang} languages={item.languages} omit={[lang]} />
            <span style="flex: auto"></span>
            <span class="date">
              {new Date(item.post.meta.pubDate).toLocaleDateString(lang)}
            </span>
          </div>
        ))}
      </div>
    </section>
  )}
  <Footer />
</BaseLayout>

<style lang="less">
h1, h2, p {
  font-family: "IBM Plex Sans", sans-serif;
}
.hero {
  margin-top: 24px;
  padding: 0 1rem;
  h1 {
    margin: 0;
  }
  .tags {
    margin-top: 16px;
    p {
      margin: 4px 0;
    }
  }
}
.showcase {
  padding: 0 1rem;
  h2 {
    margin-top: 32px;
    margin-bottom: 12px;
    transition: 0.3s all;
    border-radius: 4px;
    &:hover {
      background-color: var(--stone-red-1);
    }
  }
  a {
    text-decoration: none;
    color: #000;
  }
  .grid {
    display: grid;
    grid-template-columns: 1fr;
    margin: 0 4px;
    gap: 12px;
    .item {
      display: flex;
      padding: 4px 0;
      border-radius: 4px;
      transition: 0.3s all;
      font-weight: 500;
      gap: 8px;
      color: var(--stone-font-black);
      &:hover {
        background-color: var(--stone-red-1);
      }
      .date {
        opacity: 0.6;
      }
      .title {
        font-family: "Crete Round", sans-serif;
      }
    }
  }
}
</style>
