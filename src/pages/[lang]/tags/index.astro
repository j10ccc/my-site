---
import getTags from "@utils/getTags";
import BaseLayout from "@layouts/BaseLayout.astro";
import type { Languages } from "@interfaces/i18n";
import Footer from "@components/Footer.astro";
import { getLanguageCollections, getPostsWithLanguage } from "@utils/languageCollection";

export interface Props {
	lang: Languages;
}

const { lang } = Astro.props;

export async function getStaticPaths() {
  return [
    { params: { lang: "zh-cn" }, props: { lang: "zh-cn"} },
    { params: { lang: "en" }, props: { lang: "en"} }
  ]
}

const allCollections = await getLanguageCollections();

const withLanguage = getPostsWithLanguage(allCollections, lang)

const tags = getTags(withLanguage.map(item => item.post));
const pageTitle = "Tag Index";
---

<BaseLayout title={pageTitle} lang={lang}>
  <main>
    <div class="tags">
      {tags.map((tag) => (
        <div class="tag">
          <a href={`/${lang}/tags/${tag.toLowerCase()}`}>
            {tag.toUpperCase()}
          </a>
        </div>
      ))}
    </div>
  </main>
  <Footer />
</BaseLayout>

<style lang="less">
main {
  margin-top: 16px;
}

.tags {
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto;
  padding: 0 1rem;
}
.tag {
  margin: 0.25em;
  border-radius: 1rem;
  padding: 2px .8em;
  font-size: 1.15em;
  background-color: var(--stone-red-1);
  transition: .2s all;
  a {
    font-family: 'Crete Round', sans-serif;
    color: var(--stone-red-6);
    font-size: 1rem;
    text-decoration: none;
    transition: .5s all;
  }
  &:hover {
    background-color: var(--stone-red-6);
    a {
      color: white;
    }
  }
}
</style>
