---
import BaseLayout from "@layouts/BaseLayout.astro";
import type { Post } from "@interfaces/post";
import getTags from "@utils/getTags";
import { getCollection } from "astro:content";
import { languages } from "@i18n/ui";
import type { Languages } from "@interfaces/i18n";
import PostPreiew from "@components/PostPreiew.astro";
import Footer from "@components/Footer.astro";

export interface Props {
  posts: Post[];
}

export async function getStaticPaths() {
  const allPosts = (await getCollection("blog")).map(page => {
    const [, ...slug] = page.slug.split("/");
    return {
      meta: page.data,
      url: slug.join("/"),
    }
  });

  const uniqueTags = getTags(allPosts);

  const routes = uniqueTags.map(tag => {
    const filteredPosts = allPosts.filter(post =>
      (post.meta.tags && tag !== undefined) &&
      post.meta.tags!
        .map(tag => tag.toUpperCase())
        .includes(tag.toUpperCase())
    );
    return Object.keys(languages).map(language => ({
      params: { lang: language, tag: tag.toLowerCase() },
      props: { posts: filteredPosts }
    }))
  }).flat();

  return routes;
}

const { lang, tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout title="Blog" lang={lang as Languages}>
  <main>
    <div class="title">
      <h2>Posts tagged with</h2>
      <h2 class="tag">{tag?.toUpperCase()}</h2>
    </div>
    <div class="list">
      {posts.map(post => (
        <PostPreiew post={post} hightlightTag={tag} />
      ))}
    </ul>
  </main>
  <Footer />
</BaseLayout>

<style lang="less">
main {
  margin-top: 16px;
  padding: 0 1rem;
}
.title {
  font-family: "IBM Plex Sans", sans-serif;
  h2 {
    margin: 0;
    display: inline-block;
  }
  .tag {
    font-family: 'Crete Round', sans-serif;
    background-color: var(--stone-green-1);
    border-radius: 6px;
  }
}

.list {
  padding-left: 1rem;
}

</style>
