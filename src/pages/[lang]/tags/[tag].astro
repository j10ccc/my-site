---
import BaseLayout from "@layouts/BaseLayout.astro";
import type { LanguageCollection } from "@interfaces/post";
import getTags from "@utils/getTags";
import { getLanguageCollections, getPostsWithLanguage, parseCollection } from "@utils/languageCollection";
import { languages } from "@i18n/ui";
import type { Languages } from "@interfaces/i18n";
import PostPreview from "@components/PostPreview.astro";
import Footer from "@components/Footer.astro";

export interface Props {
  collections: LanguageCollection[];
}

const { lang, tag } = Astro.params;
const { collections } = Astro.props;

export async function getStaticPaths() {
  const allCollections = await getLanguageCollections();
  const withLanguage = getPostsWithLanguage(allCollections);

  const uniqueTags = getTags(withLanguage.map(item => item.post));

  const routes = uniqueTags.map(tag => {
    const filtered = allCollections.filter(item => {
      const target = parseCollection(item);
      return (target.post.meta.tags && tag !== undefined) &&
        target.post.meta.tags!
          .map(tag => tag.toUpperCase())
          .includes(tag.toUpperCase())
    })
    return Object.keys(languages).map(language => ({
      params: { lang: language, tag: tag.toLowerCase() },
      props: { collections: filtered }
    }))
  }).flat();

  return routes;
}

---

<BaseLayout title="Blog" lang={lang as Languages}>
  <main>
    <div class="title">
      <h2>Posts tagged with</h2>
      <h2 class="tag">{tag?.toUpperCase()}</h2>
    </div>
    <div class="list">
      {collections.map(collection => (
        <PostPreview collection={collection} hightlightTag={tag} />
      ))}
    </ul>
  </main>
  <Footer />
</BaseLayout>

<style lang="less">
main {
  margin-top: 16px;
  padding: 0 1rem;
}
.title {
  font-family: "IBM Plex Sans", sans-serif;
  h2 {
    margin: 0;
    display: inline-block;
  }
  .tag {
    font-family: 'Crete Round', sans-serif;
    background-color: var(--stone-green-1);
    border-radius: 6px;
  }
}

.list {
  padding-left: 1rem;
}

</style>
