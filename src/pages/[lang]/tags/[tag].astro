---
import BaseLayout from "@layouts/BaseLayout.astro";
import type { Post } from "@types/post";
import getTags from "@utils/getTags";
import { getCollection } from "astro:content";
import { languages } from "@i18n/ui";

export interface Props {
  posts: Post[];
}

export async function getStaticPaths() {
  const allPosts = (await getCollection("blog")).map(page => {
    const [, ...slug] = page.slug.split("/");
    return {
      meta: page.data,
      url: slug.join("/"),
    }
  });

  const uniqueTags = getTags(allPosts);

  const routes = uniqueTags.map(tag => {
    const filteredPosts = allPosts.filter(post =>
      (post.meta.tags && tag !== undefined) &&
      post.meta.tags?.includes(tag)
    );
    return Object.keys(languages).map(language => ({
      params: { lang: language, tag },
      props: { posts: filteredPosts }
    }))
  }).flat();

  return routes;
}

const { lang, tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout title="Blog" lang={lang as "zh-cn" | "en"}>
  <h2>Posts tagged with {tag}</h2>
  <ul>
    {posts.map(post => (
      <li><a href={`/${lang}/blog/${post.url}`}>{post.meta.title}</a></li>
    ))}
  </ul>
</BaseLayout>
