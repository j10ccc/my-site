---
import PostNav from "@components/PostNav.astro";
import { languages } from "@i18n/ui";
import type { LanguageCollection } from "@interfaces/post";
import type { CollectionEntry } from "astro:content";
import { getLanguageCollections, parseCollection } from "@utils/languageCollection";
import type { Languages } from "@interfaces/i18n";

interface Props {
  postLang: Languages;
  page: CollectionEntry<"blog">;
  next: LanguageCollection | undefined;
  previous: LanguageCollection | undefined;
}

export async function getStaticPaths() {
  const collections = await getLanguageCollections();
  const sortedByDate = collections.sort((a, b) =>
    new Date(b.posts["zh-cn"]!.entry.data.pubDate).getTime() - new Date(a.posts["zh-cn"]!.entry.data.pubDate).getTime()
  );

  // Flatten with languages
  const allPosts = sortedByDate
    .map((collection, index) =>
      Object.values(collection.posts).map((post) => ({
        ...post,
        collectionIndex: index,
      }))
    ).flat();

  const paths = allPosts
    .map(page => {
      const [lang, ...slug] = page.entry.slug.split("/");
      return Object.keys(languages).map((languages) => {
        return {
          params: { lang: languages, slug: `${slug.join("/")}-${lang}` },
          props: {
            postLang: lang,
            page: page.entry,
            next: sortedByDate[page.collectionIndex + 1],
            previous: sortedByDate[page.collectionIndex - 1],
          },
        };
      });
    })
    .flat();

  return paths;
}

const { postLang, page, next, previous } = Astro.props;

const generateNav = (collection: LanguageCollection | undefined, lang: Languages) => {
  if (collection) {
    const post = parseCollection(collection, lang).post;
    return {
      label: post.meta.title,
      link: post.url
    }
  } else {
    return {
      label: "Blog",
      link: "./"
    }
  }
}

const nextNav = generateNav(next, postLang);
const previousNav = generateNav(previous, postLang);

const { Content } = await page.render();
---

<Content />
<PostNav next={nextNav} previous={previousNav} />

<script src="@scripts/vim-mode/post-scroll.ts"></script>
